install.packages(c("foreign", "mgcv"))
install.packages(c("foreign", "lattice", "mgcv"))
install.packages(c("Matrix", "foreign"))
install.packages("nlme")
install.packages(c("Matrix", "foreign", "lattice", "mgcv", "nlme", "rpart", "survival"))
install.packages(c("MASS", "Matrix", "boot", "cluster", "nlme", "rpart"))
library("rstudio", lib.loc="/usr/local/Cellar/r/3.0.3/R.framework/Versions/3.0/Resources/library")
library("nnet", lib.loc="/usr/local/Cellar/r/3.0.3/R.framework/Versions/3.0/Resources/library")
library("parallel", lib.loc="/usr/local/Cellar/r/3.0.3/R.framework/Versions/3.0/Resources/library")
library("nlme", lib.loc="/usr/local/Cellar/r/3.0.3/R.framework/Versions/3.0/Resources/library")
library("manipulate", lib.loc="/usr/local/Cellar/r/3.0.3/R.framework/Versions/3.0/Resources/library")
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
library(KernSmooth)
x <- 0:6
x
as.logical(x)
as.character(x)
as.complex(x)
m <- matrix(nrow=2,ncol=3)
m
attributes(m)
dim(m)
m.dim
m = 1:10
m
attribute(m)
attributes(m)
dim(m)
dim(m) = c(2,5)
m
l = list(1:4,"a","b")
l
l = list(1,2,3,4,"a","b")
l
attributes(l)
x = 1:3
y = 10:12
x
y
cbind(x,y)
rbind(x,y)
f = factor(c("yes","yes","yes","yes","yes","no","no","no"))
f
attributes(f)
levels(f)
table(f)
unclass(f)
x <- c("yes","yes","yes","yes","yes","no","no","no")
x
u <- x > "yes"
u
u <- x == "yes"
u
x = c("a","b","c","d","e")
x
x[1]
x[2]
x[1:4]
x[x>"b"]
x>"b"
l = list(foo=1:4,bar=0.6)
l
l[1]
l[[1]]
l[1][1]
l[1]
l[[1]]
l[[2]]
l$bar
l$foo
l$foo[1]
library(swirl)
ls()
swirl()
library(swirl)
swirl()
swirl()
x <-  c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,100)
z <- rep(NA,1000)
myData <- sample(c(y,z),100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c[3,5,7]]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")
]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20,4,5)
identical(myMatrix,myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients)
cbind(patients,myMatrix)
myData <- data.frame(patients,myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
save.image("~/fictiousfido/datasciencecoursera/02_r_programming/week_01/swirl_prac.RData")
savehistory("~/fictiousfido/datasciencecoursera/02_r_programming/week_01/swirl_prac.Rhistory")
savehistory("~/fictiousfido/datasciencecoursera/02_r_programming/week_01/swirl_prac.Rhistory")
setwd("~/fictiousfido/datasciencecoursera/02_r_programming/week_02")
library(quiz_functions)
library(quiz_functions.R)
source(quiz_functions)
source(quiz_functions.R)
source('~/fictiousfido/datasciencecoursera/02_r_programming/week_02/quiz_functions.R')
z <- 10
f(3)
cube(3)
source('~/fictiousfido/datasciencecoursera/02_r_programming/week_02/quiz_functions.R')
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
x
if (x>5) {}
if (x>5) {x <- 0}
source('~/fictiousfido/datasciencecoursera/02_r_programming/week_02/quiz_functions.R')
source('~/fictiousfido/datasciencecoursera/02_r_programming/week_02/quiz_functions.R')
f(3)
source('~/fictiousfido/datasciencecoursera/02_r_programming/week_02/quiz_functions.R')
y
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
savehistory("~/fictiousfido/datasciencecoursera/02_r_programming/week_02/quiz_week_02.Rhistory")
